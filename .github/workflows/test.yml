# Performs all required tests on the Unity project
name: Unity Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    types: [opened, synchronize, reopened]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  PROJECT_PATH: .

jobs:
  # Validate Unity license integrity
  # Request license if no file is set
  license:
    name: Check if Unity license is set as a repository secret
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.license_job.outputs.is_unity_license_set }}
    steps:
      - name: Check if license should be requested
        id: license_job
        run: |
          echo "Skip activation: ${{ env.UNITY_LICENSE != '' }}"
          echo "::set-output name=is_unity_license_set::${{ env.UNITY_LICENSE != '' }}"
  activation:
    needs: [license]
    if: needs.license.outputs.is_unity_license_set == 'false'
    name: Request license activation
    runs-on: ubuntu-latest
    steps:
      - name: Request manual activation file
        id: activation_job
        # https://github.com/game-ci/unity-request-activation-file/releases/
        uses: game-ci/unity-request-activation-file@v2.0-alpha-1
        # Upload activation file as an artifact (Unity_v2021.3.1f1.alf)
      - name: Expose activation file as artifact
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.activation_job.outputs.filePath }}
          path: ${{ steps.activation_job.outputs.filePath }}

  test:
    needs: [license]
    if: needs.license.outputs.is_unity_license_set == 'true'
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Cache library files
        uses: actions/cache@v2.1.3
        with:
          path: Library
          key: Library-Hamstars-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-Hamstars-
            Library-
      # https://github.com/game-ci/unity-test-runner/releases/
      - name: Execute Unity test runner
        uses: game-ci/unity-test-runner@v2.0.2
        id: test_job
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          testMode: all
          customParameters: "-nographics"
      - name: Upload resultant test artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Test results (all modes)
          path: ${{ steps.test_job.outputs.artifactsPath }}

